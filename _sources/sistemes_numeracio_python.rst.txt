###############################
Sistemes de numeració en Python
###############################

Python ens ofereix una manera molt còmoda de treballar amb diferents sistemes de numeració.

Per exemple:

- el número ``1100100101`` en binari, el representarem com ``0b1100100101``

- el número ``32`` en octal, el representarem com ``0o32``

- el número ``F3A`` en hexadecimal, el podem representar com ``oxf3a``

Si entrem a la consola de Python, podem simplement escriure aquests números i Python ens respondrà
amb el seu equivalent en decimal:

.. code-block:: none

    >>> 0b1100100101
    805
    >>> 0o32
    26
    >>> 0xf3a
    3898

Cal tenir present que Python ens permetrà fer operacions tot barrejant bases diferents. Per exemple:

.. code-block:: none

    >>> 0xf3a - 0b1100100101 + 0o32
    3119

En cas que el que ens calgui sigui saber com es representarien aquests números en altres sistemes,
podem fer servir les funcions especials ``bin()``, ``oct()`` i ``hex()``. Per exemple:

.. code-block:: none

    >>> bin(805)
    '0b1100100101'
    >>> oct(26)
    '0o32'
    >>> hex(3898)
    '0xf3a'

Fixa't que els resultats apareixen entre cometes simples. Això, en Python no és en realitat un
nombre sinò un text. Això fa que si intentem sumar-los no ens generarà el resultat esperat:

.. code-block:: none

    >>> '2' + '3'
    '23'

Per a aconseguir convertir d'un text a un enter, ens caldrà fer servir la funció especial ``int()``:

.. code-block:: none

    >>> int('2') + int('3')
    5

En cas que el text correspongui a un nombre en una base diferent, li ho haurem d'indicar a
``int()``:

.. code-block:: none

    >>> int('0o32', 8)
    26
    >>> int('0xf3a', 16) - int('0b1100100101', 2) + int('0o32', 8)
    3119

De fet, per ``int()`` la informació de la base en el text no és necessària, i podríem escriure:

.. code-block:: none

    >>> int('f3a', 16) - int('1100100101', 2) + int('32', 8)
    3119

Finalment, podem combinar les funcions per a aconseguir coses com ara la representació en binari
d'un nombre en octal:

.. code-block:: none

    >>> bin(int('0o32', 8))
    '0b11010'


Practiquem
==========


Pràctica 1. Conversions amb Python
----------------------------------

Indica quina és l'expressió necessaria en Python per a aconseguir les següents conversions:

#. ``00100111101`` en binari a octal (resulta ``475``)

#. ``542`` en octal a hexadecimal (resulta ``162``)

#. ``FABADA`` de hexadecimal a octal (resulta ``76535332``)

#. ``0b111111100000`` de binari a hexadecimal (resulta ``FE0``)


----

*Ref. IP6.3*

