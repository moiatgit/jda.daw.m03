###########
Definicions
###########

*Dada*: unitat de tractament d’informació d’un tipus determinat: numèric, alfanumèric, booleà...

Per un ordinador, totes les dades es representen amb sistema binari (0 i 1) independentment del tipus

*Informació*: conjunt de dades relacionades entre si dintre d’un context.

Les dades poden ser referides dins d'un programa de les següents maneres:

#. *literal*: directament amb el seu valor. Com ara ``42``,
   ``3.1416`` i "hola"

#. *variable*: posició de memòria que pot ser referida pel programa a
   partir d'un nom, de manera que es pot consultar el valor que conté
   emmagatzemat la posició de memòria i també canviar-lo per un altre.

   Una manera gràfica d'entendre les variable és veure-les com
   contenidors de valors.

   Cada variable porta associat:

   - Un identificador: nom per referenciar la variable

   - Un tipus: indica els valors vàlids que pot contenir

   - Un àmbit: part del programa on la variable pot ser referenciada

   - Un valor: dins dels valors vàlids

   - Una posició de memòria: un espai a la memòria on es guarda el valor.

   Exemples de variables serien:


   - ``edat`` que podria contenir el valor ``18``

   - ``any_naixement`` que podria contenir el valor ``2001``

   - ``anydescobriment`` que podria contenir el ``1942``

   - ``esViu`` que podria contenir el valor ``cert``

   - ``nom`` que podria contenir el valor ``Adelita Ros Ramires``

   - ``x002`` que podria contenir… ves a saber què

#. *constant*: el mateix que les variables, excepte que el valor no
   pot ser canviat durant l'execució del programa.

   Les constants poden ser *absolutes* (ex. PI) o relatives a un
   context (ex. EDAT_MINIMA)

   Exemples de constants són:

   - ``PI`` que valdria aproximadament ``3.1416`` i és una constant absoluta

   - ``EDAT_MINIMA`` que a Catalunya és ``18`` anys però en altres llocs no

   - ``FORMAT_DATA``  que podría valer ``YYYYMMDD`` per identificar que primer va l'any, després el
     mes i finalment el dia. Podria ser una constant relativa, fins i tot per un programa concret
     però no per d'altres.

És molt important escollir correctament el nom de les variables i les consonants. Per exemple,
``edat`` és fàcil saber que contindrà, oi? valors vàlids per una edat. En canvi, què dimonis voldrà
dir ``x002``?

Per distingir constants de variables, sovint veuràs que els llenguatges de programació escriuen en
minúscules les primeres i en majúscules les segones. Aquí adoptarem aquesta convenció i pobre de tu
que te la saltis ;)

Finalment, fixa't què passa quan el nom de la variable o de la constant conté més d'una paraula. En
els exemples anteriors:

* ``any_naixement``: les paraules es separen amb guió baix. Es coneix com a *snake case* (sembla una
  serp?) i és la convenció més habitual per programar en Python

* ``anydescobriment``: les paraules no es separen. El resultat no és gaire clar però a molts dels
  primers programadors (significativament de Python) els agradava. Així que, no facis servir aquesta
  però preparat per veure-la.

* ``esViu``: la inicial de les següents paraules apareix en majúscules per indicar que ha canviat de
  paraula. Es coneix com a *camel case* i és la convenció més utilitzada per programar en Java.

* ``EDAT_MINIMA``: tot en majúscules i en *snake case* és la convenció més habitual per indicar que
  és una constant. La trobaràs tant per Python com per Java (i molts altres llenguatges)

En resum, **cal** posar noms **significatius** a les variables i les constants, i fent servir les
convencions pròpies del llenguatge.

Practiquem
==========

Pràctica 1. Distingint variables i constants
--------------------------------------------

Per cadascun dels següents conceptes indica si l'emmagatzemaries en una variable o en una constant.
En cas de ser constant, indica si seria relativa o absoluta.

* dins d'un programa de veterinaris, el nom d'una mascota.

* a un programa d'un aeroport, l'hora de sortida d'un vol concret.

* a un programa d'una botiga d'automòvils, la llista de marques dels vehicles que ven.

* a un programa d'un institut, el nombre màxim d'estudiants en un grup.

* a una discoteca chupi-guay, el color prohibit de mitjons (per cert, *blanc*)

* en un processador de text, el número de la pàgina actual.

* en el processador de text anterior, el nombre total de pàgines del document actual.


Pràctica 2. Noms per variables i constants
------------------------------------------

Posa ara noms adequats per les variables i constants anteriors. En cas que les convencions marquin
un nom diferent per Python i Java, indica les dues versions.

Pràctica 3. Identifica variables
--------------------------------

Considera novament el següent codi:

.. literalinclude:: _code/turtle_redandblue.py
    :linenos:
    :language: python

Identifica els noms de les variables que fa servir i de quin tipus són
segons ``type()``

**Pistes**: 

- n'hi ha tres. Dues d'elles són fàcils d'identificar perquè la declaració
  inclou una inicialització explícita (amb ``=``) però l'altra no. No et
  sentis malament si no la trobes.

- per saber el tipus, una opció és afegir al codi el que es coneix com
  *xivato*. Per exemple, en el següent codi el xivato ens dirà que el
  tipus de la variable ``edat`` és enter

  .. code-block:: python

        >>> edat = 19
        >>> print(type(edat))
        <class 'int'>


----

*Ref. IP7.1*
