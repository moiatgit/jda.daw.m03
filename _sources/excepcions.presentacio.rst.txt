######################
Les excepcions en Java
######################

Considerem el següent codi:

.. code-block:: java
    :linenos:

    public void setHora(int h) throws Exception {
        if (h>=0 && h<24) {
            this.h=h;
        } else {
            throw new Exception("Hora.setHora("+h+") valor fora de rang");
        }
    }

Que usarem de la següent manera:

.. code-block:: java
    :linenos:

    Hora h1 = new Hora();
    try {
        h1.setHora(224);
    } catch (Exception e) {
        System.out.println("Error assignant l'hora: " + e);
    }

Aquest codi genera la sortida:

.. code-block:: none

    Error assignant l'hora: java.lang.Exception: Hora.setHora(224) valor fora de rang

D'aquesta manera aconseguim que els mètodes set assegurin l'hora
correcta.

Però, què passa amb el constructor? Tal i com el tenim es
pot crear una hora no vàlida! Doncs fem que generi una excepció si
algun paràmetre no és correcte.

.. code-block:: java
   :linenos:

   public Hora(int h,int m, int s) throws Exception {
       setHora(h);
       setMinut(m);
       setSegon(s);
   }

.. _excepcions_horaambexcepcions:

Exercici 2. La classe Hora amb excepcions
=========================================

Torna a considerar la classe Hora de l'exercici :ref:`anterior
<excepcions_horaambcontrolderrors>`.

En aquest cas, implementa el control d'errors amb excepcions allà on els usuaris de la
classe puguin passar-li valors no vàlids. Els *setters* retornaran ``void``.

En cas d'error, els mètodes retornaran els missatges:

* "Hora(«hores», «minuts», «segons») fora de rang"
* "Hora.setHores(«hores») fora de rang"
* "Hora.setMinuts(«minuts») fora de rang"
* "Hora.setSegons(«segons») fora de rang"

.. important:: Cal que realitzis aquest exercici sense fer ús de les utilitats d'hora que ofereix l'API
               de Java.

Aquest exercici disposa d'un conjunt de tests que pots descarregar-te d':download:`aquí
<_recursos/E010002HoraTest.java>`.


----

*Ref. 20.1.10.2*
