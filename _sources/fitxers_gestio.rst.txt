#########################
Gestió de fitxers en Java
#########################


Considera el següent programa:

.. code-block:: java
    :linenos:

        import java.io.File;
        import java.io.IOException;
        import java.io.BufferedWriter;
        import java.io.FileWriter;

        public class DemoGestioFitxers {
            static void mostraElementsCarpetaActual() throws IOException {
                File cwd = new File(".");
                File[] paths = cwd.listFiles();
                System.out.println("Nombre d'elements al directori actual: " + paths.length);
                for (File path: paths) {
                    System.out.println("\t" + path.getCanonicalPath());
                }
            }

            static void mostraFitxersCarpetaActual() {
                File cwd = new File(".");
                File[] paths = cwd.listFiles();
                System.out.println("Fitxers al directori actual:");
                long totalBytes = 0;
                for (File path: paths) {
                    if (! path.isFile()) {
                        continue;   // no és un fitxer regular
                    }
                    totalBytes += path.length();
                    System.out.print("\t" + path.getName());
                    if (path.getName().endsWith(".txt")) {
                        System.out.println("\t Un fitxer de text!");
                    } else {
                        System.out.println();
                    }
                }
                System.out.println("Total bytes: " + totalBytes);
            }

            static void creaFitxer(String cami, String contingut) throws IOException {
                System.out.println("Creant el fitxer "+ cami + " amb contingut '" + contingut + "'");
                BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(cami));
                bufferedWriter.write(contingut);
                bufferedWriter.close();
            }

            static void eliminaFitxer(String cami) {
                System.out.println("Eliminant el fitxer " + cami);
                File fitxer = new File(cami);
                fitxer.delete();
            }

            public static void main(String[] args) throws IOException {
                mostraElementsCarpetaActual();
                creaFitxer("fitxernou.txt", "Continguts del fitxer nou!");
                mostraElementsCarpetaActual();
                mostraFitxersCarpetaActual();
                eliminaFitxer("fitxernou.txt");
                mostraElementsCarpetaActual();
            }
        }


Aquest programa bàsicament mostra el contingut de la carpeta actual, hi crea
un nou fitxer, mostra que el fitxer hi és, mostra només fitxers (no
carpetes i altres elements) i el nombre de bytes que ocupen, elimina el
nou fitxer i mostra que ja no hi és entre els continguts de la carpeta
actual.

És possible que vulguis veure més operacions disponibles a partir de la
classe `File
<https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/File.html>`_,
com per exemple ``exists()``, ``mkdir()`` o ``rename()``.

En executar-lo, et donarà una sortida similar a:

.. code-block:: none
    :linenos:

        $ javac DemoGestioFitxers.java && java DemoGestioFitxers 
        Nombre d'elements al directori actual: 2
            /tmp/demo/DemoGestioFitxers.class
            /tmp/demo/DemoGestioFitxers.java
        Creant el fitxer fitxernou.txt amb contingut 'Continguts del fitxer nou!'
        Nombre d'elements al directori actual: 3
            /tmp/demo/DemoGestioFitxers.class
            /tmp/demo/fitxernou.txt
            /tmp/demo/DemoGestioFitxers.java
        Fitxers al directori actual:
            DemoGestioFitxers.class
            fitxernou.txt	 Un fitxer de text!
            DemoGestioFitxers.java
        Total bytes: 4732
        Eliminant el fitxer fitxernou.txt
        Nombre d'elements al directori actual: 2
            /tmp/demo/DemoGestioFitxers.class
            /tmp/demo/DemoGestioFitxers.java

Exercici 5. ☼ Trobar un fitxer en Java
======================================

Recordes l'exercici :ref:`exercici_trobar_un_fitxer_python`? Doncs et
proposo que el provis de fer en Java. Així, de pas, comprovaràs que el
funcionament de la recursivitat en els dos llenguatges és pràcticament
idèntica, salvant sintaxi.


.. note:: Java ha incorporat una nova manera de gestionar fitxers a partir
    de la biblioteca *nio* (*new I/O*). L'he deixada fora d'aquests apunts
    perquè algunes de les funcionalitats inclouen l'ús de *streams* i
    funcions *lambda*, característiques que es troben una mica per sobre
    en complexitat que el que els objectius d'aquesta introducció
    requereixen.
