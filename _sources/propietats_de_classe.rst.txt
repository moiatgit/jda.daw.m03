####################
Propietats de classe
####################

Les propietats també poden ser de classe.

Un dels exemples més típics és el de portar el comptador de quantes instàncies d'una classe s'han creat.

Considera el següent codi, executa'l i intenta entendre el perquè de la sortida 

.. code-block:: java
    :linenos:

    /* Demostració d'ús de membres de classe */
    public class GatRenat {
        private static int numInstancies = 0;
        private int vides = 7;
        public GatRenat() {
            // constructor per defecte incrementa el nombre d'instàncies
            GatRenat.numInstancies++;
            System.out.println("Creat un nou gat Renat. Ja van " + numInstancies);
        }
        public static int getNumInstancies() {
            // retorna el nombre d'instàncies creades fins el moment
            return numInstancies;
        }
        public int getVides() { return vides; }
        public void setVides(int vides) { if (vides>=0) this.vides = vides; }
        public String toString() { return "Gat Renat amb " + vides + " vides"; }
        public static void main(String[] args) {
            System.out.println("Inicialment el nombre d'instàncies és: " +
                GatRenat.getNumInstancies());
            // crea uns quants GatRenat per demostrar l'ús de membres estàtics
            GatRenat[] gats = new GatRenat[10];
            for (int i=0; i < gats.length; i++) {
                gats[i] = new GatRenat();
                gats[i].setVides(i);    // canviem les vides només per distingir-los
                System.out.println("Tenim: " + gats[i] + " amb " +
                    gats[i].getNumInstancies() + " germanets");
            }
            // tornem a demanar a cadascun quants germans té
            System.out.println("I si tornem a demanar-los quants germans tenen, ens diuen:");
            for (int i=0; i < gats.length; i++) {
                System.out.println(gats[i].toString() + " amb " +
                    gats[i].getNumInstancies() + " germanets");
            }
        }
    }

.. note::

    La darrera crida a ``println()`` (línia 31) es podria escriure de manera més simple, sense
    necessitat de cridar explícitament al mètode ``toString()``. Considera:

    .. code-block:: java

          System.out.println(gats[i] + " amb " +
                             gats[i].getNumInstancies() +
                             " germanets");

    El mètode ``toString()`` té la particularitat de ser cridat (implícitament) en alguns contextos
    on s'espera un String, com ara en aquesta concatenació de Strings que passem a ``println()``.


.. _propietats_de_classe_exercici:

Exercici 2. Propietats de classe
================================

Demostra que has entès aquest exemple, tot realitzant la següent modificació al codi de la versió
del GatRenat que apareix en aquesta secció:

* Cada gat haurà de tenir un número identificador que indiqui en quin
  ordre va néixer respecte els seus germans.

* El primer gat creat tindrà com a identificador el 1

* Aquest identificador es podrà demanar (amb el mètode ``getId()``) i no es podrà modificar

* L'identificador apareixerà a la cadena retornada pel mètode ``toString()``. Per exemple, el
  següent codi mostraria "Gat Renat (1) amb 7 vides":

  .. code-block:: java

      public class Demo {
          public static void main(String[] args) {
              System.out.println(new GatRenat());
          }
      }

.. note:: Aquest exercici disposa d'un 
   :download:`test unitari <_recursos/E004002GatRenatTest.java>`.
   Assegura't que el teu codi passa tots els tests.


----

*Ref. 20.1.3.2*
