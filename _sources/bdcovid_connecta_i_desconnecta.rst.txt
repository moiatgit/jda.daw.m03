######################
Connexió i desconnexió
######################

Comencem amb una implementació parcial de la classe *Zoo*, de manera que
ens permeti connectar-nos a la base de dades, i desconnectar-nos
posteriorment.

La classe *Zoo*, en aquesta primera versió, tindria el següent aspecte:

.. literalinclude:: _recursos/dbcovid/animals/v1_connexiodesconnexio/Zoo.java
   :linenos:
   :lines: 10-
   :lineno-start: 10
   :language: java
   :caption: :download:`src/main/java/Zoo.java <_recursos/dbcovid/animals/v1_connexiodesconnexio/Zoo.java>`

Com podem veure, només disposem dels mètodes de connexió i desconnexió.
Abans de connectar, se n'assegura que no hi hagi ja una connexió. Abans de
desconnectar, comprova que hi hagi connexió.

No es gestiona cap excepció. Si apareixen, les haurà de gestionar el codi
que faci servir aquests mètodes.

Els mètodes retornen un missatge que descriu com ha anat el tema.

Un possible codi usuari seria:

.. literalinclude:: _recursos/dbcovid/animals/v1_connexiodesconnexio/Main.java
   :linenos:
   :lines: 5-
   :lineno-start: 5
   :language: java
   :caption: :download:`src/main/java/Main.java <_recursos/dbcovid/animals/v1_connexiodesconnexio/Main.java>`

De moment, la nostra estructura de directoris és:

.. code-block:: none

    .
    ├── animals.bd
    ├── build.gradle
    └── src
        └── main
            └── java
                ├── Main.java
                └── Zoo.java

En llençar l'execució, ens trobem (mira les línies 4 i 5):

.. code-block:: none
    :linenos:
    :emphasize-lines: 4, 5

    $ gradle run

    > Task :run
    Primer connectem amb la base de dades: Connectat a animals.bd
    Finalment tanquem la connexió amb la base de dades: Desconnectat

    BUILD SUCCESSFUL in 664ms
    2 actionable tasks: 2 executed

És a dir, la connexió i desconnexió han funcionat.
