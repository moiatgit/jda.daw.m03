#########################################
Persistència amb bases de dades (2019-20)
#########################################

En aquesta secció treballarem la manera de comunicar els nostres programes
orientats a objectes amb una base de dades relacional.

Farem servir Java com a llenguatge de programació i Sqlite3 com a
gestor de bases de dades.

L'estructura del tema és un exemple senzill de base de dades per presentar
les operacions bàsiques, conegudes com a *CRUD* (per *Create*, *Read*,
*Update* i *Delete*)

Tot el tema està pensat com un únic exercici que hauràs d'anar
desenvolupant a mida que vas seguint les explicacions. No oblidis fer un
*commit* cada cop que tinguis un exercici fet. Afegeix al comentari, quin
és el número de l'exercici que has realitzat.

*Atenció*: a continuació veuràs una certa quantitat de codi. He mirat de
minimitzar els comentaris dins del codi per tal que ocupi poquet doncs les
explicacions que afegeixo haurien de servir per completar. En tot cas,
probablement voldràs afegir comentaris a molts dels mètodes que hi
apareixeran, per tal de comprovar que els entens ara i en un futur.

Les comprovacions per saber que el teu codi està bé, són visuals. Si
t'agradaria disposar de proves automàtiques, potser la manera més fàcil és
que et preparis un joc de proves d'entrada/sortida de l'estil als que hem
anat preparant a tants i tants exercicis durant aquest curs.

Els continguts es distribueixen de la següent manera:

.. toctree::
    :titlesonly:
    :maxdepth: 1

    bdcovid_sqlite.rst
    bdcovid_model_de_dades.rst
    bdcovid_connecta_i_desconnecta.rst
    bdcovid_classe_categoria.rst
    bdcovid_classe_animal.rst
    bdcovid_altresoperacions.rst
