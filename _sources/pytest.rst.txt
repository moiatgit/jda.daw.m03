################
Proves unitàries
################


En aquesta secció coneixerem una de les eines que més ens ajudaran a
construir i mantenir correctament els nostres programes: les proves
unitàries.

Les proves unitàries ens permeten definir com s'ha de comportar el nostre
codi depenent del context en que s'executen.

Ja n'hem vist de proves en funcionament durant aquest curs. Recordes el
``bash test/test.sh`` o els doctest? Ambdues tècniques ens han anat molt
bé fins ara, però tenien les seves limitacions.

El guió en Bash requeria definir amb molta precisió l'entrada i la sortida
en diferents fitxers. Quelcom prou farragós que de seguida es fa
impracticable quan hem de realitzar molts casos.

El *doctest* està molt bé. A banda de permetre provar les nostres funcions
d'una manera molt natural, ens serveix per documentar el codi de les
nostres funcions. Presenta però algunes incomoditats, per exemple amb els
espais sobrers o les cometes dobles o simples. Per fer proves bàsiques
està prou bé, però amb proves més sofisticades ens trobem tard o d'hora
amb limitacions.

Ara farem un pas més i començarem a fer servir un dels *frameworks* de
proves més fàcils, potents i flexibles que tenim al món Python: *pytest*

Trobaràs la seva documentació completa `aquí
<https://docs.pytest.org/en/latest/contents.html>`_ però deixa'm que et
faci una breu introducció per començar.

Trobaràs aquesta secció dividida en els següents punts:

.. toctree::
    :maxdepth: 1
    :titlesonly:

    pytest.installacio.rst
    pytest.holapytest.rst
    pytest.unexemplemessofisticat.rst
    pytest.exercicis.rst

