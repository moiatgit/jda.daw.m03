###############
Afegim recursos
###############

Molt bé. Ara ja som capaços de construir una aplicació Web senzilla amb
una plantilla. Però el resultat no deixa de ser un HTML *nu*. Estaria bé
afegir-li una mica de color i, potser, alguna imatge.

Els elements com ara CSS o imatges, es solen anomenar *recursos estàtics*
en el món Web. Es tracta de fitxers que no depenen de la interacció i que
sempre s'han de lliurar tal qual.

Com que la nostra aplicació, pel que respecta a aquest curs, no s'ha de
preocupar de com s'executarà en producció (a un servidor real), ens
resultarà força senzill.

Per començar, modifiquem la plantilla de manera que inclogui l'enllaç a un
CSS i a una imatge.

El resultat que perseguim és:

.. image:: _recursos/holaspark/v6/resultatenmaco.png
   :align: center

Per a aconguir-ho, ens caldran alguns petits canvis. Per començar,
necessitarem guardar el CSS i la image. La jerarquia de carpetes esperada
és:

.. code-block:: none

   .
   ├── …
   ├── build.gradle
   └── src
       ├── main
       │   ├── java
       │   │   └── Main.java
       │   └── resources
       │       ├── css
       │       │   └── default.css
       │       ├── img
       │       │   └── logo.svg
       │       └── spark
       │           └── template
       │               └── freemarker
       │                   └── holaspark.html
       └── test
           └── java
               └── TestMain.java

Canviarem la plantilla:

.. literalinclude:: _recursos/holaspark/v6/holaspark.html
   :linenos:
   :language: html
   :caption: :download:`src/main/resources/spark/templates/freemarker/holaspark.html <_recursos/holaspark/v6/holaspark.html>`

Fixa't que ara indiquem un CSS (línia 5) i una imatge a la línia 10.

Pots descarregar-te el :download:`logo <http://sparkjava.com/img/logo.svg>` del seu lloc original.

El fitxer CSS que generaria el resultat que cerco pel navegador Firefox
seria:

.. literalinclude:: _recursos/holaspark/v6/default.css
   :linenos:
   :language: css
   :caption: :download:`src/main/resources/css/default.css <_recursos/holaspark/v6/default.css>`


Finalment ens caldrà indicar a *Spark* on pot trobar els fitxers:

.. literalinclude:: _recursos/holaspark/v6/Main.java
   :linenos:
   :lines: 7-
   :lineno-start: 7
   :language: java
   :caption: :download:`src/main/java/Main.java <_recursos/holaspark/v6/Main.java>`

Bàsicament introduïm la línia 25 per indicar a *Spark* que pot trobar els
fitxers estàtics a l'arrel del projecte. Aquesta arrel es correspon per
defecte amb la carpeta ``src/main/resources/``.

Executem i… voilà! Ja ho tenim.


Exercici 8. Capicua amb bon aspecte
===================================

Tornem al projecte de capicua.

En aquesta ocasió afegirem estils a la nostra aplicació.

Aquí pots, des d'adaptar el css de l'aplicació de salutacions, a afegir
animacions amb CSS que facin donar voltes a la paraula capicua.

Ah! I si ho trobes, pots afegir-li alguna imatge. Per exemple, la foto de
la nostra heroïna capicua *Anna*.

